//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/_Scripts/Analytic Tool/AnalyticPCControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @AnalyticPCControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @AnalyticPCControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""AnalyticPCControls"",
    ""maps"": [
        {
            ""name"": ""Analytic"",
            ""id"": ""2c46baa7-f2a8-4fc1-bf92-e1c1de50ce33"",
            ""actions"": [
                {
                    ""name"": ""Accept"",
                    ""type"": ""Button"",
                    ""id"": ""08e0c36b-ca61-4e69-b1f8-de59238eb033"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""940fad7b-92ed-437d-ba6c-d6ccdb4b6310"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Record"",
                    ""type"": ""Button"",
                    ""id"": ""0c736c5d-852a-4a0c-b03d-5d585b252b28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopRecord"",
                    ""type"": ""Button"",
                    ""id"": ""2e14bc0c-b2cd-47a9-9926-8737e6fb91c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save"",
                    ""type"": ""Button"",
                    ""id"": ""585b4e99-3222-4a9e-b3ec-6fa4fc2fc05d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Replay"",
                    ""type"": ""Button"",
                    ""id"": ""eb713bc1-c096-47b2-a4bf-3a06523c55dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReportAudio"",
                    ""type"": ""Button"",
                    ""id"": ""fb6491ab-16b7-4f52-9a13-abb4b12276f3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Load"",
                    ""type"": ""Button"",
                    ""id"": ""93882bca-5eec-4901-9938-811f13b01d9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""4a26d91f-dd3c-4f40-be35-91a3683dda33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rewind"",
                    ""type"": ""Button"",
                    ""id"": ""049fc293-f79c-4e6c-a815-906bf3bc8d23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FastForward"",
                    ""type"": ""Button"",
                    ""id"": ""710d7af3-db0c-4caa-b148-8af3152baffc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bd54af34-5b5b-4096-ad2c-52ae687d29ee"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c9dbf9d-e3fc-405e-bccf-9ff5c7ef36e2"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6429a493-aec2-4313-92b2-8e325598fde3"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Record"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f5b2de9-3015-4f34-afc0-c712dfc4f3ac"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopRecord"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8a22fbd-8452-4299-84f8-6334b77a8aec"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfa7c0ad-53a3-43fe-b21d-202e11bbe628"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Replay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e78a704-7f80-4e29-930b-80b4ca345e58"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReportAudio"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b3fc6ec-bdde-469c-921c-55d84b5efc48"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Load"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e821298d-7741-456b-856c-2720790ddf78"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56a91b3c-d19c-4bee-93a5-25fd50f54a2c"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rewind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c5a2c72-faba-4372-890b-df5c3e94b168"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FastForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Analytic
        m_Analytic = asset.FindActionMap("Analytic", throwIfNotFound: true);
        m_Analytic_Accept = m_Analytic.FindAction("Accept", throwIfNotFound: true);
        m_Analytic_Reset = m_Analytic.FindAction("Reset", throwIfNotFound: true);
        m_Analytic_Record = m_Analytic.FindAction("Record", throwIfNotFound: true);
        m_Analytic_StopRecord = m_Analytic.FindAction("StopRecord", throwIfNotFound: true);
        m_Analytic_Save = m_Analytic.FindAction("Save", throwIfNotFound: true);
        m_Analytic_Replay = m_Analytic.FindAction("Replay", throwIfNotFound: true);
        m_Analytic_ReportAudio = m_Analytic.FindAction("ReportAudio", throwIfNotFound: true);
        m_Analytic_Load = m_Analytic.FindAction("Load", throwIfNotFound: true);
        m_Analytic_Menu = m_Analytic.FindAction("Menu", throwIfNotFound: true);
        m_Analytic_Rewind = m_Analytic.FindAction("Rewind", throwIfNotFound: true);
        m_Analytic_FastForward = m_Analytic.FindAction("FastForward", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Analytic
    private readonly InputActionMap m_Analytic;
    private IAnalyticActions m_AnalyticActionsCallbackInterface;
    private readonly InputAction m_Analytic_Accept;
    private readonly InputAction m_Analytic_Reset;
    private readonly InputAction m_Analytic_Record;
    private readonly InputAction m_Analytic_StopRecord;
    private readonly InputAction m_Analytic_Save;
    private readonly InputAction m_Analytic_Replay;
    private readonly InputAction m_Analytic_ReportAudio;
    private readonly InputAction m_Analytic_Load;
    private readonly InputAction m_Analytic_Menu;
    private readonly InputAction m_Analytic_Rewind;
    private readonly InputAction m_Analytic_FastForward;
    public struct AnalyticActions
    {
        private @AnalyticPCControls m_Wrapper;
        public AnalyticActions(@AnalyticPCControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accept => m_Wrapper.m_Analytic_Accept;
        public InputAction @Reset => m_Wrapper.m_Analytic_Reset;
        public InputAction @Record => m_Wrapper.m_Analytic_Record;
        public InputAction @StopRecord => m_Wrapper.m_Analytic_StopRecord;
        public InputAction @Save => m_Wrapper.m_Analytic_Save;
        public InputAction @Replay => m_Wrapper.m_Analytic_Replay;
        public InputAction @ReportAudio => m_Wrapper.m_Analytic_ReportAudio;
        public InputAction @Load => m_Wrapper.m_Analytic_Load;
        public InputAction @Menu => m_Wrapper.m_Analytic_Menu;
        public InputAction @Rewind => m_Wrapper.m_Analytic_Rewind;
        public InputAction @FastForward => m_Wrapper.m_Analytic_FastForward;
        public InputActionMap Get() { return m_Wrapper.m_Analytic; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AnalyticActions set) { return set.Get(); }
        public void SetCallbacks(IAnalyticActions instance)
        {
            if (m_Wrapper.m_AnalyticActionsCallbackInterface != null)
            {
                @Accept.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnAccept;
                @Accept.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnAccept;
                @Accept.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnAccept;
                @Reset.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReset;
                @Record.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRecord;
                @Record.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRecord;
                @Record.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRecord;
                @StopRecord.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnStopRecord;
                @StopRecord.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnStopRecord;
                @StopRecord.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnStopRecord;
                @Save.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnSave;
                @Save.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnSave;
                @Save.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnSave;
                @Replay.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReplay;
                @Replay.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReplay;
                @Replay.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReplay;
                @ReportAudio.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReportAudio;
                @ReportAudio.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReportAudio;
                @ReportAudio.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnReportAudio;
                @Load.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnLoad;
                @Load.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnLoad;
                @Load.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnLoad;
                @Menu.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnMenu;
                @Rewind.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRewind;
                @Rewind.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRewind;
                @Rewind.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnRewind;
                @FastForward.started -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnFastForward;
                @FastForward.performed -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnFastForward;
                @FastForward.canceled -= m_Wrapper.m_AnalyticActionsCallbackInterface.OnFastForward;
            }
            m_Wrapper.m_AnalyticActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Accept.started += instance.OnAccept;
                @Accept.performed += instance.OnAccept;
                @Accept.canceled += instance.OnAccept;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @Record.started += instance.OnRecord;
                @Record.performed += instance.OnRecord;
                @Record.canceled += instance.OnRecord;
                @StopRecord.started += instance.OnStopRecord;
                @StopRecord.performed += instance.OnStopRecord;
                @StopRecord.canceled += instance.OnStopRecord;
                @Save.started += instance.OnSave;
                @Save.performed += instance.OnSave;
                @Save.canceled += instance.OnSave;
                @Replay.started += instance.OnReplay;
                @Replay.performed += instance.OnReplay;
                @Replay.canceled += instance.OnReplay;
                @ReportAudio.started += instance.OnReportAudio;
                @ReportAudio.performed += instance.OnReportAudio;
                @ReportAudio.canceled += instance.OnReportAudio;
                @Load.started += instance.OnLoad;
                @Load.performed += instance.OnLoad;
                @Load.canceled += instance.OnLoad;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
                @Rewind.started += instance.OnRewind;
                @Rewind.performed += instance.OnRewind;
                @Rewind.canceled += instance.OnRewind;
                @FastForward.started += instance.OnFastForward;
                @FastForward.performed += instance.OnFastForward;
                @FastForward.canceled += instance.OnFastForward;
            }
        }
    }
    public AnalyticActions @Analytic => new AnalyticActions(this);
    public interface IAnalyticActions
    {
        void OnAccept(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnRecord(InputAction.CallbackContext context);
        void OnStopRecord(InputAction.CallbackContext context);
        void OnSave(InputAction.CallbackContext context);
        void OnReplay(InputAction.CallbackContext context);
        void OnReportAudio(InputAction.CallbackContext context);
        void OnLoad(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnRewind(InputAction.CallbackContext context);
        void OnFastForward(InputAction.CallbackContext context);
    }
}
